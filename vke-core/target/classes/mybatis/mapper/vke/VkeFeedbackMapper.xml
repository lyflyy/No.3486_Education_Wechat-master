<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zhishimao.core.vke.dao.VkeFeedbackMapper">
  <resultMap id="BaseResultMap" type="cn.zhishimao.core.vke.entity.VkeFeedback">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="course_id" jdbcType="BIGINT" property="courseId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="edit_time" jdbcType="TIMESTAMP" property="editTime" />
    <result column="remak" jdbcType="VARCHAR" property="remak" />
    <result column="version" jdbcType="BIGINT" property="version" />
  </resultMap>
  <sql id="Base_Column_List">
    `id`, `user_id`, `course_id`,``content`, `created_time`, `edit_time`, `remak`, `version`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `vke_feedback`
    where `id` = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from `vke_feedback`
    where `id` = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.zhishimao.core.vke.entity.VkeFeedback">
    insert into `vke_feedback` (`id`, `user_id`, `content`, 
      `created_time`, `edit_time`, `remak`, 
      `version`)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{editTime,jdbcType=TIMESTAMP}, #{remak,jdbcType=VARCHAR}, 
      #{version,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="cn.zhishimao.core.vke.entity.VkeFeedback">
    insert into `vke_feedback`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        `id`,
      </if>
      <if test="userId != null">
        `user_id`,
      </if>
      <if test="courseId != null">
        `course_id`,
      </if>
      <if test="content != null">
        `content`,
      </if>
      <if test="createdTime != null">
        `created_time`,
      </if>
      <if test="editTime != null">
        `edit_time`,
      </if>
      <if test="remak != null">
        `remak`,
      </if>
      <if test="version != null">
        `version`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="editTime != null">
        #{editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remak != null">
        #{remak,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.zhishimao.core.vke.entity.VkeFeedback">
    update `vke_feedback`
    <set>
      <if test="userId != null">
        `user_id` = #{userId,jdbcType=BIGINT},
      </if>
      <if test="courseId != null">
        `course_id` = #{course_Id,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        `content` = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        `created_time` = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="editTime != null">
        `edit_time` = #{editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remak != null">
        `remak` = #{remak,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        `version` = #{version,jdbcType=BIGINT},
      </if>
    </set>
    where `id` = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.zhishimao.core.vke.entity.VkeFeedback">
    update `vke_feedback`
    set `user_id` = #{userId,jdbcType=BIGINT},
      `content` = #{content,jdbcType=VARCHAR},
      `created_time` = #{createdTime,jdbcType=TIMESTAMP},
      `edit_time` = #{editTime,jdbcType=TIMESTAMP},
      `remak` = #{remak,jdbcType=VARCHAR},
      `version` = #{version,jdbcType=BIGINT}
    where `id` = #{id,jdbcType=BIGINT}
  </update>
  <sql id="Base_Condition">
    <if test="id != null">
      and `id` = #{id,jdbcType=BIGINT}
    </if>
    <if test="userId != null">
      and `user_id` = #{userId,jdbcType=BIGINT}
    </if>
    <if test="courseId != null">
      and `course_id` = #{courseId,jdbcType=BIGINT}
    </if>
    <if test="content != null">
      and `content` = #{content,jdbcType=VARCHAR}
    </if>
    <if test="createdTime != null">
      and `created_time` = #{createdTime,jdbcType=TIMESTAMP}
    </if>
    <if test="editTime != null">
      and  `edit_time` = #{editTime,jdbcType=TIMESTAMP}
    </if>
    <if test="remak != null">
      and  `remak` = #{remak,jdbcType=VARCHAR}
    </if>
    <if test="version != null">
      and `version` = #{version,jdbcType=BIGINT}
    </if>
  </sql>
  <select id="listByEntity" parameterType="cn.zhishimao.core.vke.entity.VkeFeedback" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from vke_feedback
    where 1=1
    <include refid="Base_Condition" />
  </select>

  <select id="findFeedbackList" resultType="java.util.HashMap">
    select vu.id user_id ,vu.nick_name ,vc.id course_id,vc.`name` course_name,
    vf.content ,vf.created_time
    from vke_feedback vf
    LEFT JOIN vke_user vu on vf.user_id = vu.id
    LEFT JOIN vke_course vc on vf.course_id = vc.id
    order by vf.created_time DESC
  </select>
</mapper>