<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zhishimao.core.course.dao.VkeCourseUserMapper">
    <resultMap id="BaseResultMap" type="cn.zhishimao.core.course.entity.VkeCourseUser">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="course_id" jdbcType="BIGINT" property="courseId"/>
        <result column="student_id" jdbcType="BIGINT" property="studentId"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="created_time" jdbcType="TIMESTAMP" property="createdTime"/>
        <result column="edit_time" jdbcType="TIMESTAMP" property="editTime"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="version" jdbcType="BIGINT" property="version"/>
    </resultMap>
    <sql id="Base_Column_List">
    `id`, `course_id`, `student_id`, `type`, `created_time`, `edit_time`, `remark`, `version`
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `vke_course_user`
        where `id` = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from `vke_course_user`
    where `id` = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" useGeneratedKeys="true" keyProperty="id"
            parameterType="cn.zhishimao.core.course.entity.VkeCourseUser">
    insert into `vke_course_user` (`id`, `course_id`, `student_id`, 
      `type`, `created_time`, `edit_time`, 
      `remark`, `version`)
    values (#{id,jdbcType=BIGINT}, #{courseId,jdbcType=BIGINT}, #{studentId,jdbcType=BIGINT}, 
      #{type,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP}, #{editTime,jdbcType=TIMESTAMP}, 
      #{remark,jdbcType=VARCHAR}, #{version,jdbcType=BIGINT})
  </insert>
    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id"
            parameterType="cn.zhishimao.core.course.entity.VkeCourseUser">
        insert into `vke_course_user`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                `id`,
            </if>
            <if test="courseId != null">
                `course_id`,
            </if>
            <if test="studentId != null">
                `student_id`,
            </if>
            <if test="type != null">
                `type`,
            </if>
            <if test="createdTime != null">
                `created_time`,
            </if>
            <if test="editTime != null">
                `edit_time`,
            </if>
            <if test="remark != null">
                `remark`,
            </if>
            <if test="version != null">
                `version`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="courseId != null">
                #{courseId,jdbcType=BIGINT},
            </if>
            <if test="studentId != null">
                #{studentId,jdbcType=BIGINT},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="createdTime != null">
                #{createdTime,jdbcType=TIMESTAMP},
            </if>
            <if test="editTime != null">
                #{editTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="version != null">
                #{version,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.zhishimao.core.course.entity.VkeCourseUser">
        update `vke_course_user`
        <set>
            <if test="courseId != null">
                `course_id` = #{courseId,jdbcType=BIGINT},
            </if>
            <if test="studentId != null">
                `student_id` = #{studentId,jdbcType=BIGINT},
            </if>
            <if test="type != null">
                `type` = #{type,jdbcType=VARCHAR},
            </if>
            <if test="createdTime != null">
                `created_time` = #{createdTime,jdbcType=TIMESTAMP},
            </if>
            <if test="editTime != null">
                `edit_time` = #{editTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                `remark` = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="version != null">
                `version` = #{version,jdbcType=BIGINT},
            </if>
        </set>
        where `id` = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.zhishimao.core.course.entity.VkeCourseUser">
    update `vke_course_user`
    set `course_id` = #{courseId,jdbcType=BIGINT},
      `student_id` = #{studentId,jdbcType=BIGINT},
      `type` = #{type,jdbcType=VARCHAR},
      `created_time` = #{createdTime,jdbcType=TIMESTAMP},
      `edit_time` = #{editTime,jdbcType=TIMESTAMP},
      `remark` = #{remark,jdbcType=VARCHAR},
      `version` = #{version,jdbcType=BIGINT}
    where `id` = #{id,jdbcType=BIGINT}
  </update>
    <sql id="Base_Condition">
        <if test="id != null">
            and `id` = #{id,jdbcType=BIGINT}
        </if>
        <if test="courseId != null">
            and `course_id` = #{courseId,jdbcType=BIGINT}
        </if>
        <if test="studentId != null">
            and `student_id` = #{studentId,jdbcType=BIGINT}
        </if>
        <if test="type != null">
            and `type` = #{type,jdbcType=VARCHAR}
        </if>
        <if test="createdTime != null">
            and `created_time` = #{createdTime,jdbcType=TIMESTAMP}
        </if>
        <if test="editTime != null">
            and `edit_time` = #{editTime,jdbcType=TIMESTAMP}
        </if>
        <if test="remark != null">
            and `remark` = #{remark,jdbcType=VARCHAR}
        </if>
        <if test="version != null">
            and `version` = #{version,jdbcType=BIGINT}
        </if>
    </sql>
    <select id="listByEntity" parameterType="cn.zhishimao.core.course.entity.VkeCourseUser" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from vke_course_user
        where 1=1
        <include refid="Base_Condition"/>
        order by created_time desc
    </select>

    <update id="upgrade" parameterType="java.util.HashMap">
     update vke_course_user set type = #{type,jdbcType=BIGINT}
     where  course_id = #{courseId,jdbcType=VARCHAR} and student_id = #{userId,jdbcType=VARCHAR}
  </update>
    <select id="selectStudentsByCourseId" resultType="java.util.HashMap">
      SELECT vcu.id, vcu.student_id, vu.avatar,vu.nick_name,vcu.type,vcu.created_time,vu.id userId,vu.sex,vu.intro
      from vke_course_user vcu
      left join vke_user vu on vu.id = vcu.student_id
      where vcu.course_id = #{_parameter,jdbcType=BIGINT}
      ORDER  by vcu.created_time desc
    </select>
    <!--用于直播客户端缓存-->
    <select id="selectStudentsByCourseId2" resultType="java.util.HashMap">
        SELECT vcu.student_id as studentid, vu.avatar,vu.nick_name as nickname,vcu.type
        from vke_course_user vcu
        left join vke_user vu on vu.id = vcu.student_id
        where vcu.course_id = #{_parameter,jdbcType=BIGINT}
        ORDER  by vcu.created_time desc
    </select>

    <select id="selectStudentByCourseId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        from vke_course_user
        where course_id = #{courseId,jdbcType=BIGINT} and student_id = #{userId,jdbcType=BIGINT}
    </select>

    <select id="countByCourseIdAndStudentId" resultType="java.lang.Integer">
        select count(id) from vke_course_user
        where course_id = #{courseId,jdbcType=BIGINT} and student_id = #{userId,jdbcType=BIGINT}
    </select>
    <select id="selectLecturerInfo" resultType="java.util.HashMap">
        SELECT vu.id as studentid, vu.avatar,vu.nick_name as nickname, 'lecturer' as 'type'
        from vke_course vc
        left join vke_user vu on vu.id = vc.lecturer_id
        where vc.id = #{_parameter,jdbcType=BIGINT}
    </select>

    <select id="statisticCourseUser" resultType="java.util.HashMap">
        CALL user_course_statistic( #{type,jdbcType=VARCHAR,mode=IN})
    </select>

    <select id="findAll" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"></include>
        from vke_course_user
    </select>

    <select id="findCourseUserByRegion" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"></include>
        from vke_course_user
        where 1=1
        <![CDATA[
  	 			and created_time > #{startDate}
  	 		]]>
        <![CDATA[
  	 			and created_time <= #{endDate}
  	 		]]>
    </select>
</mapper>